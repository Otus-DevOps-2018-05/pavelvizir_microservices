version: '3.3'
services:
  post_db:
    image: mvertes/alpine-mongo:${post_db_version}
    volumes:
      - post_db:/data/db
    networks:
      - back_net
  ui:
          #    build:
          # context: ./ui
          # dockerfile: Dockerfile.3
    image: ${USERNAME}/ui:${ui_version}
    ports:
      - ${ui_port}:${ui_port}/tcp
    networks:
      - front_net
  post:
          # build: ./post-py
    image: ${USERNAME}/post:${post_version}
    networks:
      - front_net
      - back_net
  comment:
          #     build:
          # context: ./comment
          # dockerfile: Dockerfile.3
    image: ${USERNAME}/comment:${comment_version}
    networks:
      - front_net
      - back_net
  prometheus:
    image: ${USERNAME}/prometheus
    networks:
      - front_net
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
  node-exporter:
    image: prom/node-exporter:v0.15.2
    networks:
      - front_net
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
  blackbox_exporter:
    image: ${USERNAME}/blackbox_exporter:${blackbox_exporter_version}
    networks:
      - front_net

volumes:
  prometheus_data:
  post_db:

networks:
  front_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24
  back_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.2.0/24
